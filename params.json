{
  "name": "Reactions",
  "tagline": "A minimum environment mixing Reactjs, ES6, Babel and Bower. All you absolutely need and hopefully nothing you would change or delete later.",
  "body": "# A bare minimum Webpack and Babel configuration\r\n\r\nThis is a project I have been looking for elsewhere: not a very opinionated fully accessorized compilation chain to create a web project mixing in all you might need in the future. This is the exact opposite: it is the minimum configuration with the shortest configuration files and dependencies, that will make possibile to create a Reactjs project using ES6 syntax and a build system based on Webpack.\r\n\r\nSources should go into src and the entry pont should be in main.js. With these settings, typing\r\n\r\n\twebpack\r\n\r\nA single compiled file named main.js, along with a source map, will appear in the www directory, ready for shipping. Everything outside the www directory need not be distributed.\r\n\r\n# Installation log\r\n\r\n## Webpack\r\n\r\nI followed [Pete Hunt's instructions on Github][1], in particular\r\n\r\n* npm init\r\n* npm install webpack\r\n* npm install babel-loader coffee-loader\r\n* npm install babel-core babel-preset-es2015 babel-preset-react\r\n* npm install babel-core\r\n* npm install babel-preset-es2015 --save-dev\r\n* npm install react react-dom\r\n* npm install babel-preset-react\r\n\r\nI created a Webpack config based on [James Nelson's instruction to configure Bower in 26 lines of code][2] trying to reduce line count as much as possibile and making slight changes.\r\n\r\n\t// webpack.config.js\r\n\r\n\tvar path = require('path');\r\n\tvar webpack = require('webpack');\r\n\r\n\tmodule.exports = {\r\n\t    entry: [\r\n\t        //'babel-polyfill',\r\n\t        './src/main'\r\n\t    ],\r\n\t    output: {\r\n\t        path: './www',\r\n\t        publicPath: '/',\r\n\t        filename: 'main.js'\r\n\t    },\r\n\t    devtool: 'source-map',\r\n\t    module: {\r\n\t        loaders: [{\r\n\t            test: /\\.js$/,\r\n\t            include: path.join(__dirname, 'src'),\r\n\t            loader: 'babel-loader',\r\n\t            query: {\r\n\t                presets: [\"es2015\"],\r\n\t            }\r\n\t        }]\r\n\t    },\r\n\t    debug: true\r\n\t};\r\n\r\nWith these setting, sources will be in the `src` directory, and compilation output will end in `www`, where should go everything that needs to be installed on the server or in the app, like css and graphics.\r\n\r\n[1]: https://github.com/petehunt/webpack-howto\r\n[2]: http://jamesknelson.com/webpack-made-simple-build-es6-less-with-autorefresh-in-26-lines/\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}